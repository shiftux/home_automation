- name: Check if Kubernetes has already been initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_stat
  become: yes

- name: Initialize Kubernetes master with kubeadm init
  command: >
    kubeadm init
    --pod-network-cidr={{ kubernetes_pod_network_cidr }}
  register: kubeadmin_init
  when: not kubernetes_init_stat.stat.exists
  become: yes

- name: Print the init output to screen
  debug:
    var: kubeadmin_init.stdout
    verbosity: 2
  when: not kubernetes_init_stat.stat.exists

- name: Ensure .kube directory exists
  file:
    path: "/home/{{ user }}/.kube"
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"

- name: Symlink the kubectl admin.conf to "/home/{{ user }}/.kube/conf"
  file:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ user }}/.kube/config"
    state: link
    owner: "{{ user }}"
    group: "{{ group }}"
  become: yes

- name: Configure Flannel networking
  command: "{{ item }}"
  with_items:
    - kubectl apply -f {{ kubernetes_flannel_manifest_file_rbac }}
    - kubectl apply -f {{ kubernetes_flannel_manifest_file }}
  register: flannel_result
  changed_when: "'created' in flannel_result.stdout"

- name: Get the kubeadm join command from the Kubernetes master
  command: kubeadm token create --print-join-command
  changed_when: false
  register: kubernetes_join_command_result

- name: set the k8s join command for the nodes to use
  set_fact:
    kubernetes_join_command: >
      {{ kubernetes_join_command_result.stdout }}
  delegate_to: "{{ item }}"
  delegate_facts: true
  with_items: "{{ groups['k8s_nodes'] }}"

- debug:
    var: kubernetes_join_command_result.stdout
